import BoxTarget from "@components/tasks/BoxTarget";
import TaskCard from "@components/tasks/TaskCard";
import { Item, TaskStatus } from "@lib/enums";
import type { NextPage } from "next";
import Head from "next/head";
import { createContext, useEffect, useState } from "react";
import { v4 as uuid } from "uuid";

export const CardContext = createContext({
  markTaskAsDone: (taskId: string): void => {},
});

const Home: NextPage = () => {
  const [taskList, setTaskList] = useState<Item[]>([
    {
      _id: uuid(),
      status: "incomplete",
      title: "Buy Milk",
      category: "shopping",
      details: "Buy 2L of Oat Milk",
    },
    {
      _id: uuid(),
      status: "incomplete",
      title: "Buy Dog Food",
      category: "shopping",
      details: "Buy food for Phantom.",
    },
    {
      _id: uuid(),
      status: "incomplete",
      title: "Dishes",
      category: "chores",
      details: "Wash the utensils.",
    },
    {
      _id: uuid(),
      status: "incomplete",
      title: "Dishes",
      category: "chores",
      details: "Wash the utensils.",
    },
    {
      _id: uuid(),
      status: "incomplete",
      title: "Dishes",
      category: "chores",
      details: "Wash the utensils.",
    },
    {
      _id: uuid(),
      status: "incomplete",
      title: "Dishes",
      category: "chores",
      details: "Wash the utensils.",
    },
  ]);

  const markTaskAsDone = (taskId: string) => {
    const draggedTask = taskList.find((task) => task._id === taskId) as Item;
    draggedTask.status = TaskStatus.COMPLETE;
    // console.log(draggedTask);
    setTaskList(taskList.filter((task: Item) => task._id !== taskId).concat(draggedTask));
  };

  useEffect(() => console.log(uuid()), []);
  return (
    <CardContext.Provider value={{ markTaskAsDone }}>
      <Head>
        <title>Kanban</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="min-h-screen flex flex-col justify-between gap-4">
        <header className="text-center py-3 border-b-2 mx-4">
          <a href="#" className="tasks font-bold font-sans text-2xl">
            Tasks
          </a>
        </header>
        <main className="flex flex-col md:flex-row px-4 gap-4 justify-center items-center">
          <div className="ongoing h-[750px] bg-[#64d1c7] rounded w-[375px] sm:w-[500px]  overflow-y-scroll">
            <header className="text-center text-xl py-4 text-black border-b-2 border-b-black sticky top-0 z-50 backdrop-blur-lg">
              On-going Tasks
            </header>
            <main className=" flex flex-col justify-center items-center p-4 gap-2">
              {taskList
                .filter((item) => item.status === TaskStatus.INCOMPLETE)
                .map((item) => (
                  <TaskCard
                    key={item._id}
                    {...{ title: item.title, details: item.details, category: item.category, _id: item._id }}
                  ></TaskCard>
                ))}
            </main>
          </div>
          <div className="completed h-[750px] bg-[#70b2f2] rounded w-[375px] sm:w-[500px] overflow-y-scroll">
            <header className="text-center text-xl py-2 text-black border-b-2 border-b-black sticky top-0 z-50 backdrop-blur-lg">
              Completed Tasks
            </header>
            <main className="p-4">
              <BoxTarget>
                {taskList
                  .filter((item: Item) => item.status === TaskStatus.COMPLETE)
                  .map((item: Item) => (
                    <TaskCard
                      key={item._id}
                      {...{ title: item.title, details: item.details, category: item.category, _id: item._id }}
                    ></TaskCard>
                  ))}
              </BoxTarget>
            </main>
          </div>
        </main>
        <footer className="text-center py-5 border-t-2">
          <p className="font-bold">All rights reserved.</p>
        </footer>
      </div>
    </CardContext.Provider>
  );
};

export default Home;
